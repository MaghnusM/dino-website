{"ast":null,"code":"var _jsxFileName = \"/Users/mmareneck/Desktop/other/nft-generator-client/src/App.js\";\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // import contractABI from './utils/MyEpicNFT.json';\n// Constants\n\nconst TWITTER_HANDLE = '';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [supply, setSupply] = useState(10000);\n  const [collectionName, setCollectionName] = useState(\"\");\n  const [collectionTokenName, setCollectionTokenName] = useState(\"\");\n  const [price, setPrice] = useState(0.05); // Render Methods\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"Connect to Wallet\");\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account);\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n      } else {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"have account\", account);\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }; // const askContractToMintNft = async () => {\n  //   const CONTRACT_ADDRESS = \"0x59543f6Ed768C64b0Dcd87100b6C9748BCAbe5c5\";\n  //     try {\n  //       const { ethereum } = window;\n  //       if (ethereum) {\n  //         const provider = new ethers.providers.Web3Provider(ethereum);\n  //         const signer = provider.getSigner();\n  //         const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n  //         console.log(\"Going to pop wallet now to pay gas...\")\n  //         let nftTxn = await connectedContract.makeAnEpicNFT();\n  //         console.log(\"Mining...please wait.\")\n  //         await nftTxn.wait();\n  //         console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n  //       } else {\n  //         console.log(\"Ethereum object doesn't exist!\");\n  //       }\n  //     } catch (error) {\n  //       console.log(error)\n  //     }\n  // }\n\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  const submitContract = event => {\n    console.log('New Collection Name ' + collectionName);\n    console.log('New Price ' + collectionTokenName);\n    console.log('New Supply ' + supply);\n    console.log('New Price ' + price);\n    event.preventDefault();\n\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        deploy(collectionName, collectionTokenName, \"\", supply, provider, signer);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header gradient-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Make a NFT Collection\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"No programming required. Just art.\"), currentAccount === \"\" ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Connect to Wallet\") : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitContract,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Collection Name\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Collection Name\",\n    type: \"text\",\n    id: \"collectionName\",\n    value: collectionName,\n    placeholder: \"Collection Name\",\n    onChange: e => setCollectionName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Collection Token Name\",\n    type: \"text\",\n    id: \"collectionTokenName\",\n    value: collectionTokenName,\n    placeholder: \"Collection Token Name\",\n    onChange: e => setCollectionTokenName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Collection Price\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Price\",\n    type: \"number\",\n    id: \"price\",\n    value: price,\n    placeholder: \"Collection Price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Collection Supply\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Supply\",\n    type: \"number\",\n    id: \"supply\",\n    value: supply,\n    placeholder: \"Collection Supply\",\n    onChange: e => setSupply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mmareneck/Desktop/other/nft-generator-client/src/App.js"],"names":["React","useEffect","useState","ethers","TWITTER_HANDLE","TWITTER_LINK","OPENSEA_LINK","App","currentAccount","setCurrentAccount","supply","setSupply","collectionName","setCollectionName","collectionTokenName","setCollectionTokenName","price","setPrice","renderNotConnectedContainer","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWallet","error","submitContract","event","preventDefault","provider","providers","Web3Provider","signer","getSigner","deploy","e","target","value"],"mappings":"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","sourcesContent":["import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n// import contractABI from './utils/MyEpicNFT.json';\n\n// Constants\nconst TWITTER_HANDLE = '';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\n\nconst App = () => {\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  \n  const [supply, setSupply] = useState(10000);\n  const [collectionName, setCollectionName] = useState(\"\");\n  const [collectionTokenName, setCollectionTokenName] = useState(\"\");\n  const [price, setPrice] = useState(0.05);\n\n  // Render Methods\n  const renderNotConnectedContainer = () => (\n    <button className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account)\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n      } else {\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\"});\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"have account\", account);\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  // const askContractToMintNft = async () => {\n  //   const CONTRACT_ADDRESS = \"0x59543f6Ed768C64b0Dcd87100b6C9748BCAbe5c5\";\n  //     try {\n  //       const { ethereum } = window;\n\n  //       if (ethereum) {\n  //         const provider = new ethers.providers.Web3Provider(ethereum);\n  //         const signer = provider.getSigner();\n  //         const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n\n  //         console.log(\"Going to pop wallet now to pay gas...\")\n  //         let nftTxn = await connectedContract.makeAnEpicNFT();\n\n  //         console.log(\"Mining...please wait.\")\n  //         await nftTxn.wait();\n          \n  //         console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n\n  //       } else {\n  //         console.log(\"Ethereum object doesn't exist!\");\n  //       }\n  //     } catch (error) {\n  //       console.log(error)\n  //     }\n  // }\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  const submitContract = (event) => {\n    console.log('New Collection Name ' + collectionName);\n    console.log('New Price ' + collectionTokenName);\n    console.log('New Supply ' + supply);\n    console.log('New Price ' + price);\n    event.preventDefault();\n\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        deploy(collectionName, collectionTokenName, \"\", supply, provider, signer);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">Make a NFT Collection</p>\n          <p className=\"sub-text\">\n            No programming required. Just art.\n          </p>\n          {currentAccount === \"\" ? (\n            <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n              Connect to Wallet\n            </button>\n          ) : (\n            <form onSubmit={submitContract}>\n              \n              <p className=\"sub-text\">Collection Name</p>\n              <textarea \n                name = \"Collection Name\"\n                type=\"text\"\n                id=\"collectionName\"\n                value = {collectionName}\n                placeholder=\"Collection Name\"\n                onChange={e => setCollectionName(e.target.value)}\n              >\n              </textarea>\n              <br />\n              <textarea \n                name = \"Collection Token Name\"\n                type=\"text\"\n                id=\"collectionTokenName\"\n                value = {collectionTokenName}\n                placeholder=\"Collection Token Name\"\n                onChange={e => setCollectionTokenName(e.target.value)}\n              >\n              </textarea>\n              <br />\n              <p className=\"sub-text\">Collection Price</p>\n              <textarea \n                name = \"Price\"\n                type=\"number\"\n                id=\"price\"\n                value = {price}\n                placeholder=\"Collection Price\"\n                onChange={e => setPrice(e.target.value)}\n              >\n              </textarea>\n              <br />\n              <p className=\"sub-text\">Collection Supply</p>\n              <textarea \n                name = \"Supply\"\n                type=\"number\"\n                id=\"supply\"\n                value = {supply}\n                placeholder=\"Collection Supply\"\n                onChange={e => setSupply(e.target.value)}\n              >\n              </textarea>\n              <br />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          )}\n        </div>\n        <div className=\"footer-container\">\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}