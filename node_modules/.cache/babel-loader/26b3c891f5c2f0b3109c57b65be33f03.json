{"ast":null,"code":"var _jsxFileName = \"/Users/mmareneck/Desktop/other/dino-website/src/App.js\";\nimport './styles/App.css';\nimport discordLogo from \"./assets/discordlogo.svg\";\nimport Menu from './Menu';\nimport TwitterLogo from \"./assets/twitter-logo.svg\";\nimport DiscordLogo from './assets/discord.png';\nimport OpenseaLogo from './assets/opensea.png';\nimport artbook1 from './assets/artbook1.png';\nimport artbook2 from './assets/artbook2.png';\nimport dino1gif from './assets/dinogif1.gif';\nimport dino1 from './assets/dino1.png';\nimport dino2 from './assets/dino2.png';\nimport dino3 from './assets/dino3.png';\nimport sample1 from './assets/sample1.png';\nimport sample2 from './assets/sample2.png';\nimport sample3 from './assets/sample3.png';\nimport sample4 from './assets/sample4.png';\nimport sample5 from './assets/sample5.png';\nimport sample6 from './assets/sample6.png';\nimport sample7 from './assets/sample7.png';\nimport sample8 from './assets/sample8.png';\nimport dinotopiaIsReal from './assets/dinotopia.png';\nimport Swal from \"sweetalert2\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport DinosDeluxe from './utils/DinosDeluxe.json'; // Constants\n// const TWITTER_HANDLE = '';\n\nconst App = () => {\n  const CONTRACT_ADDRESS = \"0x7e7B066b5752f0eb1768BdeFcF7bCd4a493d387B\";\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isMintActive, setIsMintActive] = useState(\"\");\n  const [numMfers, setNumMfers] = useState(0);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  const contractABI = DinosDeluxe.abi;\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    checkIsMintActive();\n    updateTotalSupply();\n    updateBalance(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkIsMintActive = async () => {\n    console.log(\"CHECK IS MINT ACTIVE\");\n\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n        setIsMintActive(await connectedContract.isSaleActive());\n        console.log(await connectedContract.isSaleActive());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateTotalSupply = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n        let supply = parseInt(await connectedContract.totalSupply());\n        console.log(\"supply\");\n        console.log(`${supply}`);\n        setTotalSupply(parseInt(`${supply}`));\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"cant find contract?\");\n    }\n  };\n\n  const updateBalance = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n        setCurrentBalance(parseInt(await connectedContract.balanceOf(currentAccount)));\n        console.log(\"balance\");\n        console.log(`${currentBalance}`);\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"cant find contract?\");\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\");\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account);\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n        setNumMfers(0);\n      } else {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"UPDATE SUPPLY\");\n          updateTotalSupply();\n          checkIfWalletIsConnected();\n          window.location.reload(false);\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const mint = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        try {\n          if (numMfers > 0) {\n            console.log(\"Going to pop wallet now to pay gas...\");\n            var supply = parseInt(String(await connectedContract.totalSupply()));\n            console.log(supply);\n            var amount = 0.0;\n\n            if (parseInt(supply) + parseInt(numMfers) > 500) {\n              console.log(\"supply\");\n              console.log(parseInt(supply));\n              amount = numMfers * 0.03;\n            }\n\n            console.log(\"amount\");\n            console.log(amount);\n            var options = {\n              value: ethers.utils.parseEther(String(amount))\n            };\n            var methodGasEstimate = await connectedContract.estimateGas.mint(numMfers, options); // await nftTxn.wait();\n\n            methodGasEstimate = parseInt(methodGasEstimate);\n            console.log(`contract method gas estimate ${methodGasEstimate}`);\n            console.log(`amount ${amount}`);\n            options = {\n              value: ethers.utils.parseEther(String(amount)),\n              gasLimit: parseInt(methodGasEstimate * 1.2)\n            };\n            let nftTxn = await connectedContract.mint(numMfers, options);\n            console.log(\"Mining mint... please wait.\");\n            await nftTxn.wait();\n            updateBalance();\n            Swal.fire(`Successfully minted ${numMfers} Dinos!`, '', 'info');\n            console.log(`Mined, see transaction: https://etherscan.io/tx/${nftTxn.hash}`);\n          }\n        } catch (error) {\n          // alert(`couldn't mint ${numMfers} tokens `);\n          var errorMessage = error.message.substring(error.message.lastIndexOf(\"message\") + 1, error.message.lastIndexOf(\"method\"));\n\n          if (errorMessage !== \"\") {\n            alert(errorMessage);\n            console.log(error.message);\n          }\n        }\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mint\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    id: \"ytplayer\",\n    type: \"text/html\",\n    width: \"100%\",\n    height: \"500px\",\n    src: \"https://www.youtube.com/embed/KVIfhg5aUw4?autoplay=0&mute=0\",\n    frameborder: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header gradient-text title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, \"DINOS DELUXE\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"3000 dinos vibing moments before the meteor hits.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), currentAccount === \"\" ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"CONNECT\") : [!isMintActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"OPEN SOON\")) : null, isMintActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-specific\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mint,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, \"MINT DINOS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"numDadMfers\",\n    type: \"text\",\n    id: \"numMfers\",\n    className: \"textarea-entry\",\n    placeholder: \"max 20\",\n    onChange: e => setNumMfers(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  })))) : null], /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"smol-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"FIRST 500 FREE, THEN 0.03 ETH\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"smol-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, currentAccount !== \"\" ? /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"MINTED: \", totalSupply, \" / 3000\") : /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"CONNECT\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: dino1gif,\n    className: \"art-gif-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, \"Dinos Deluxe\"), currentAccount !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  }, totalSupply, \" / 3000\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, \"CONNECT\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"art\",\n    className: \"container art-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontal-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-text art-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, \"Art\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, \"There are 10 ultra \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 52\n    }\n  }, \"Legendary Galaxy Dinos\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"art-preview-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: dino1,\n    className: \"art-gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: dino2,\n    className: \"art-gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: dino3,\n    className: \"art-gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, \"And 3000 \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 42\n    }\n  }, \"Dino Deluxes\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"art-preview-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: sample1,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample2,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample3,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample4,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"art-preview-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: sample5,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample6,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample7,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: sample8,\n    className: \"art-sample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"package\",\n    className: \"container package-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontal-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-text package-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, \"WHAT YOU GET\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 33\n    }\n  }, \"It's more than a PFP...\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: artbook1,\n    className: \"artbook-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: artbook2,\n    className: \"artbook-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, \"+ Unique Cool NFT\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, \"+ One-Way Ticket to Dinotopia\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, \"+ Autographed Dinos Deluxe Artbook\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"utility\",\n    className: \"container roadmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontal-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-text roadmap-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, \"Utility\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dino-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, \"All holders of Dinos Deluxe will get access to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 82\n    }\n  }, \"Dinotopia\")), currentBalance == 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button dinotopia-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, \"MINT FOR A DINOTOPIA TICKET\") : null, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"dinotopia-img\",\n    src: dinotopiaIsReal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, \"Dinotopia is a unique P2E gaming experience reliving the great extinction, who will be the last dinosaur on earth?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#mint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitter.com/dinosdeluxe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-footer-button\",\n    src: OpenseaLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"vertical-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitter.com/dinosdeluxe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"twitter-button\",\n    src: TwitterLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mmareneck/Desktop/other/dino-website/src/App.js"],"names":["Menu","DiscordLogo","OpenseaLogo","artbook1","artbook2","dino1gif","dino1","dino2","dino3","sample1","sample2","sample3","sample4","sample5","sample6","sample7","sample8","dinotopiaIsReal","Swal","React","useEffect","useState","ethers","DinosDeluxe","App","CONTRACT_ADDRESS","currentAccount","setCurrentAccount","isMintActive","setIsMintActive","numMfers","setNumMfers","totalSupply","setTotalSupply","currentBalance","setCurrentBalance","contractABI","abi","checkIfWalletIsConnected","checkIsMintActive","updateTotalSupply","updateBalance","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","isSaleActive","error","supply","parseInt","balanceOf","accounts","request","method","length","account","connectWallet","location","reload","mint","String","amount","options","value","utils","parseEther","methodGasEstimate","estimateGas","gasLimit","nftTxn","wait","fire","hash","errorMessage","message","substring","lastIndexOf","alert","e","target","TwitterLogo"],"mappings":"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","sourcesContent":["import './styles/App.css';\nimport discordLogo from './assets/discordlogo.svg';\nimport Menu from './Menu';\nimport TwitterLogo from './assets/twitter-logo.svg';\nimport DiscordLogo from './assets/discord.png';\nimport OpenseaLogo from './assets/opensea.png';\n\nimport artbook1 from './assets/artbook1.png';\nimport artbook2 from './assets/artbook2.png';\n\nimport dino1gif from './assets/dinogif1.gif';\nimport dino1 from './assets/dino1.png';\nimport dino2 from './assets/dino2.png';\nimport dino3 from './assets/dino3.png';\n\nimport sample1 from './assets/sample1.png';\nimport sample2 from './assets/sample2.png';\nimport sample3 from './assets/sample3.png';\nimport sample4 from './assets/sample4.png';\nimport sample5 from './assets/sample5.png';\nimport sample6 from './assets/sample6.png';\nimport sample7 from './assets/sample7.png';\nimport sample8 from './assets/sample8.png';\nimport dinotopiaIsReal from './assets/dinotopia.png';\n\nimport Swal from \"sweetalert2\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport DinosDeluxe from './utils/DinosDeluxe.json';\n\n// Constants\n// const TWITTER_HANDLE = '';\n\nconst App = () => {\n\n  const CONTRACT_ADDRESS = \"0x7e7B066b5752f0eb1768BdeFcF7bCd4a493d387B\";\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isMintActive, setIsMintActive] = useState(\"\");\n  const [numMfers, setNumMfers] = useState(0);\n  const [totalSupply, setTotalSupply] = useState(0);\n\n  const [currentBalance, setCurrentBalance] = useState(0);\n\n  const contractABI = DinosDeluxe.abi;\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    checkIsMintActive();\n    updateTotalSupply();\n    updateBalance();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkIsMintActive = async () => {\n    console.log(\"CHECK IS MINT ACTIVE\");\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        setIsMintActive(await connectedContract.isSaleActive());\n        console.log(await connectedContract.isSaleActive());\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const updateTotalSupply = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        let supply = parseInt(await connectedContract.totalSupply());\n        console.log(\"supply\");\n        console.log(`${supply}`);\n        setTotalSupply(parseInt(`${supply}`));\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"cant find contract?\");\n    }\n  }\n\n  const updateBalance = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        setCurrentBalance(parseInt(await connectedContract.balanceOf(currentAccount)));\n        console.log(\"balance\");\n        console.log(`${currentBalance}`);\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"cant find contract?\");\n    }\n  }\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\");\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account)\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n        setNumMfers(0);\n      } else {\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\"});\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"UPDATE SUPPLY\");\n          updateTotalSupply();\n          checkIfWalletIsConnected();\n          window.location.reload(false);\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  const mint = async () => {\n\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        try {\n          if (numMfers > 0) {\n            console.log(\"Going to pop wallet now to pay gas...\")\n\n            var supply = parseInt(String(await connectedContract.totalSupply()));\n            console.log(supply);\n            var amount = 0.0;\n\n            if (parseInt(supply) + parseInt(numMfers) > 500) {\n              console.log(\"supply\");\n              console.log(parseInt(supply));\n              amount = numMfers * 0.03;\n            }\n\n            console.log(\"amount\");\n            console.log(amount);\n\n            var options = {\n              value: ethers.utils.parseEther(String(amount)),\n            };\n\n            var methodGasEstimate = await connectedContract.estimateGas.mint(numMfers, options);\n            // await nftTxn.wait();\n            methodGasEstimate = parseInt(methodGasEstimate);\n            console.log(`contract method gas estimate ${methodGasEstimate}`);\n            console.log(`amount ${amount}`);\n\n            options = {\n              value: ethers.utils.parseEther(String(amount)),\n              gasLimit: parseInt(methodGasEstimate * 1.2),\n            }\n\n            let nftTxn = await connectedContract.mint(numMfers, options);\n            console.log(\"Mining mint... please wait.\")\n            await nftTxn.wait();\n            updateBalance();\n            Swal.fire(`Successfully minted ${numMfers} Dinos!`, '', 'info');\n            console.log(`Mined, see transaction: https://etherscan.io/tx/${nftTxn.hash}`);\n          }\n        } catch (error) {\n          // alert(`couldn't mint ${numMfers} tokens `);\n          var errorMessage = error.message.substring(\n            error.message.lastIndexOf(\"message\") + 1, \n            error.message.lastIndexOf(\"method\")\n          );\n          if (errorMessage !== \"\") {\n            alert(errorMessage);\n            console.log(error.message);\n          }\n        }\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu />\n        {/* <a href=\"https://discord.gg/CTJXEXNuZN\"></a> */}\n          {/* <img src={discordLogo} alt=\"discordLogo\" className=\"social-icon-discord\"/> */}\n        {/* <p className=\"supply\"><a href=\"https://etherscan.io/address/0x68CCdcf9d5CB0e61d72c0b31b654d6408A93C65a\">CONTRACT</a></p> */}\n      <div id=\"mint\" className=\"container\">\n        <iframe id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"500px\"\n            src=\"https://www.youtube.com/embed/KVIfhg5aUw4?autoplay=0&mute=0\"\n            frameborder=\"0\"></iframe>\n        <div className=\"header-container\">\n          <div className=\"content-container\">\n            {/* <img src={ddLogo} alt=\"ddLogo\" className=\"dd-logo\"/> */}\n            <p className=\"header gradient-text title\">DINOS DELUXE</p> \n            <p className=\"sub-text\">\n              3000 dinos vibing moments before the meteor hits.\n            </p>\n            <br />\n            {currentAccount === \"\" ? (\n              <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n                CONNECT\n              </button>\n            ) : [\n              (!isMintActive ? (\n                <div className=\"button-container\">\n                  <button className=\"cta-button connect-wallet-button\">\n                    OPEN SOON\n                  </button>\n                </div>\n                  ) : null\n              ),\n              (isMintActive ? (\n                  <div className=\"mint-options\">\n                    <br />\n                    <div className=\"mint-specific\">\n                      <button onClick={mint} className=\"cta-button connect-wallet-button\">\n                        MINT DINOS\n                      </button>\n                      <div className=\"mint-quantity\">\n                        <textarea \n                          name = \"numDadMfers\"\n                          type=\"text\"\n                          id=\"numMfers\"\n                          className=\"textarea-entry\"\n                          placeholder=\"max 20\"\n                          onChange={e => setNumMfers(e.target.value)}\n                        >\n                        </textarea>\n                        </div>\n                    </div>\n                  </div>\n                  ) : null\n              ),\n            ]}\n            <br />\n            <p className=\"smol-text\">\n              FIRST 500 FREE, THEN 0.03 ETH\n            </p>\n            <p className=\"smol-text\">\n            {currentAccount !== \"\" ? (\n              <b>MINTED: {totalSupply} / 3000</b>\n            ) : (\n              <b>CONNECT</b>\n            )}\n            </p>\n            <div className=\"minting-container\">\n              <div className=\"minting-image\">\n              </div>\n              <div className=\"minting-amount\">\n                <img src={dino1gif} className=\"art-gif-preview\" />\n                <p className=\"supply\">Dinos Deluxe</p>\n                {currentAccount !== \"\" ? (\n                  <p className=\"supply\">{totalSupply} / 3000</p>\n                ) : (\n                  <p className=\"supply\">CONNECT</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-container\">\n        </div>\n      </div>\n      <div id=\"art\" className=\"container art-container\">\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"gradient-text art-title\">\n          Art\n        </div>\n        <br />\n        <p className=\"sub-text\">There are 10 ultra <b>Legendary Galaxy Dinos</b></p>\n        <br />\n        <div className=\"art-preview-container\">\n            <img src={dino1} className=\"art-gif\" />\n            <img src={dino2} className=\"art-gif\" />\n            <img src={dino3} className=\"art-gif\" />\n        </div>\n        <br />\n        <p className=\"sub-text\">And 3000 <b>Dino Deluxes</b></p>\n        <br />\n        <div className=\"art-preview-container\">\n          <img src={sample1} className=\"art-sample\" />\n          <img src={sample2} className=\"art-sample\" />\n          <img src={sample3} className=\"art-sample\" />\n          <img src={sample4} className=\"art-sample\" />\n        </div>\n        <div className=\"art-preview-container\">\n          <img src={sample5} className=\"art-sample\" />\n          <img src={sample6} className=\"art-sample\" />\n          <img src={sample7} className=\"art-sample\" />\n          <img src={sample8} className=\"art-sample\" />\n        </div>\n    \n      </div>\n      <div id=\"package\" className=\"container package-container\">\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"gradient-text package-title\">\n          WHAT YOU GET\n        </div>\n        <p className=\"sub-text\"><b>It's more than a PFP...</b></p>\n        <img src={artbook1} className=\"artbook-img\" />\n        <img src={artbook2} className=\"artbook-img\" />\n        <p className=\"sub-text\">+ Unique Cool NFT</p>\n        <p className=\"sub-text\">+ One-Way Ticket to Dinotopia</p>\n        <p className=\"sub-text\">+ Autographed Dinos Deluxe Artbook</p>\n      </div>\n      <div id=\"utility\" className=\"container roadmap-container\">\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"gradient-text roadmap-title\">\n          Utility\n        </div>\n        <br />\n        <div className=\"dino-container\">\n          <p className=\"sub-text\">All holders of Dinos Deluxe will get access to <b>Dinotopia</b></p>\n          {currentBalance == 0 ? (\n            <button onClick={connectWallet} className=\"cta-button connect-wallet-button dinotopia-ticket\">\n              MINT FOR A DINOTOPIA TICKET\n            </button>\n          ) : null\n          }\n          <img className=\"dinotopia-img\" src={dinotopiaIsReal} />  \n          <p className=\"sub-text\">Dinotopia is a unique P2E gaming experience reliving the great extinction, who will be the last dinosaur on earth?</p>\n        </div>\n      </div>\n      {/* Footer */}\n      <div className=\"footer\">\n        <div className=\"footer-container-bottom\">\n          <a href=\"#mint\">\n            <a href=\"https://twitter.com/dinosdeluxe\">\n              <img className=\"logo-footer-button\" src={OpenseaLogo} />  \n            </a>\n          </a>\n          <a className=\"vertical-line\"></a>\n          <a href=\"https://twitter.com/dinosdeluxe\">\n            <img className=\"twitter-button\" src={TwitterLogo} />  \n          </a>\n          {/* <a href=\"https://discord.gg/KJaJ9g9x\"><img className=\"discord-button\" src={DiscordLogo} />  </a> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;  "]},"metadata":{},"sourceType":"module"}