{"ast":null,"code":"var _jsxFileName = \"/Users/mmareneck/Desktop/other/dinos website/src/App.js\";\nimport './styles/App.css';\nimport sampleDadMfer from './assets/dadmfersample.png';\nimport discordLogo from \"./assets/discordlogo.svg\";\nimport Menu from './Menu';\nimport TwitterLogo from \"./assets/twitter-logo.svg\";\nimport DiscordLogo from './assets/discord.png';\nimport OpenseaLogo from './assets/opensea.png';\nimport dinotopiaIsReal from './assets/dinotopiaIsReal.png';\nimport ddLogo from './assets/ddlogo.png';\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport DinosDeluxe from './utils/DinosDeluxe.json'; // Constants\n// const TWITTER_HANDLE = '';\n\nconst App = () => {\n  const CONTRACT_ADDRESS = \"\";\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isMintActive, setIsMintActive] = useState(\"\");\n  const [numMfers, setNumMfers] = useState(0);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const contractABI = DinosDeluxe.abi;\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    checkIsMintActive();\n    updateTotalSupply(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkIsMintActive = async () => {\n    console.log(\"CHECK IS MINT ACTIVE\");\n\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n        setIsMintActive(await connectedContract.isSaleActive());\n        console.log(await connectedContract.isSaleActive());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\");\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account);\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n        setNumMfers(0);\n      } else {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"have account\", account);\n          checkIsMintActive();\n          updateTotalSupply();\n          checkIfWalletIsConnected();\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const updateTotalSupply = async () => {\n    try {\n      // const { ethereum } = window;\n      const provider = new ethers.providers.getDefaultProvider();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, provider);\n      let supply = await connectedContract.totalSupply();\n      console.log(\"supply\");\n      console.log(`${supply}`);\n      setTotalSupply(parseInt(`${supply}`));\n    } catch (error) {\n      console.log(\"cant find contract?\");\n    }\n  };\n\n  const mint = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        try {\n          if (numMfers > 0) {\n            console.log(\"Going to pop wallet now to pay gas...\");\n            var supply = parseInt(String(await connectedContract.totalSupply()));\n            console.log(supply);\n            var amount = 0.0;\n\n            if (parseInt(supply) + parseInt(numMfers) > 1000) {\n              console.log(\"supply\");\n              console.log(parseInt(supply));\n              amount = numMfers * 0.0269;\n            }\n\n            console.log(\"amount\");\n            console.log(amount);\n            var options = {\n              value: ethers.utils.parseEther(String(amount))\n            };\n            var methodGasEstimate = await connectedContract.estimateGas.mint(numMfers, options); // await nftTxn.wait();\n\n            methodGasEstimate = parseInt(methodGasEstimate);\n            console.log(`contract method gas estimate ${methodGasEstimate}`);\n            console.log(`amount ${amount}`);\n            options = {\n              value: ethers.utils.parseEther(String(amount)),\n              gasLimit: parseInt(methodGasEstimate * 1.2)\n            };\n            let nftTxn = await connectedContract.mint(numMfers, options);\n            console.log(\"Mining mint... please wait.\");\n            await nftTxn.wait();\n            console.log(`Mined, see transaction: https://etherscan.io/tx/${nftTxn.hash}`);\n          }\n        } catch (error) {\n          // alert(`couldn't mint ${numMfers} tokens `);\n          var errorMessage = error.message.substring(error.message.lastIndexOf(\"message\") + 1, error.message.lastIndexOf(\"method\"));\n\n          if (errorMessage !== \"\") {\n            alert(errorMessage);\n            console.log(error.message);\n          }\n        }\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mint\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    id: \"ytplayer\",\n    type: \"text/html\",\n    width: \"100%\",\n    height: \"100%\",\n    src: \"https://www.youtube.com/embed/KVIfhg5aUw4?autoplay=0&mute=0\",\n    frameborder: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ddLogo,\n    alt: \"sampleDadMfer\",\n    className: \"sample-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header gradient-text title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"DINOS DELUXE\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"dinotopia\",\n    src: dinotopiaIsReal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"5000 dinos moments vibing before the meteorite\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), currentAccount === \"\" ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"CONNECT\") : [!isMintActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, \"OPEN SOON\")) : null, isMintActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-specific\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mint,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, \"MINT DINOS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mint-quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mint-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"mint amount (max 20)\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"numDadMfers\",\n    type: \"text\",\n    id: \"numMfers\",\n    className: \"textarea-entry\",\n    placeholder: \"quantity\",\n    onChange: e => setNumMfers(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  })))) : null], /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"smol-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \"FIRST 1000 FREE\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"smol-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, \"THEN 0.05 ETH\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minting-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"Dinos Deluxe\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, totalSupply, \" / 3000\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"art\",\n    className: \"container art-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontal-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-text art-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, \"Art\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"utility\",\n    className: \"container roadmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontal-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-text roadmap-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"Utility\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dino-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, \"All holders of Dinos Deluxe will get access to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 82\n    }\n  }, \"Dinotopia\")), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"dinotopia\",\n    src: dinotopiaIsReal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"Dinotopia is a unique gaming experience reliving the great extinction, who will be the last dinosaur on earth?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#mint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-footer-button\",\n    src: OpenseaLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"vertical-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitter.com/The_HopeDAO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"twitter-button\",\n    src: TwitterLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://discord.gg/KJaJ9g9x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"discord-button\",\n    src: DiscordLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mmareneck/Desktop/other/dinos website/src/App.js"],"names":["sampleDadMfer","Menu","DiscordLogo","OpenseaLogo","dinotopiaIsReal","ddLogo","React","useEffect","useState","ethers","DinosDeluxe","App","CONTRACT_ADDRESS","currentAccount","setCurrentAccount","isMintActive","setIsMintActive","numMfers","setNumMfers","totalSupply","setTotalSupply","contractABI","abi","checkIfWalletIsConnected","checkIsMintActive","updateTotalSupply","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","isSaleActive","error","accounts","request","method","length","account","connectWallet","getDefaultProvider","supply","parseInt","mint","String","amount","options","value","utils","parseEther","methodGasEstimate","estimateGas","gasLimit","nftTxn","wait","hash","errorMessage","message","substring","lastIndexOf","alert","e","target","TwitterLogo"],"mappings":"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","sourcesContent":["import './styles/App.css';\nimport sampleDadMfer from './assets/dadmfersample.png';\nimport discordLogo from './assets/discordlogo.svg';\nimport Menu from './Menu';\nimport TwitterLogo from './assets/twitter-logo.svg';\nimport DiscordLogo from './assets/discord.png';\nimport OpenseaLogo from './assets/opensea.png';\n\nimport dinotopiaIsReal from './assets/dinotopiaIsReal.png';\nimport ddLogo from './assets/ddlogo.png';\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport DinosDeluxe from './utils/DinosDeluxe.json';\n\n// Constants\n// const TWITTER_HANDLE = '';\n\nconst App = () => {\n\n  const CONTRACT_ADDRESS = \"\";\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isMintActive, setIsMintActive] = useState(\"\");\n  const [numMfers, setNumMfers] = useState(0);\n  const [totalSupply, setTotalSupply] = useState(0);\n\n  const contractABI = DinosDeluxe.abi;\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    checkIsMintActive();\n    updateTotalSupply();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkIsMintActive = async () => {\n    console.log(\"CHECK IS MINT ACTIVE\");\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        setIsMintActive(await connectedContract.isSaleActive());\n        console.log(await connectedContract.isSaleActive());\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\");\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      setCurrentAccount(account)\n      console.log(\"have an account\");\n    } else {\n      console.log(\"no account\");\n    }\n\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"no metamask detected\");\n        setNumMfers(0);\n      } else {\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\"});\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          setCurrentAccount(account);\n          console.log(\"have account\", account);\n          checkIsMintActive();\n          updateTotalSupply();\n          checkIfWalletIsConnected();\n        } else {\n          console.log(\"no accounts!\");\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  const updateTotalSupply = async () => {\n    try {\n      // const { ethereum } = window;\n\n      const provider = new ethers.providers.getDefaultProvider();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, provider);\n\n      let supply = await connectedContract.totalSupply();\n      console.log(\"supply\");\n      console.log(`${supply}`);\n      setTotalSupply(parseInt(`${supply}`));\n    } catch (error) {\n      console.log(\"cant find contract?\");\n    }\n  }\n\n  const mint = async () => {\n\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n\n        try {\n          if (numMfers > 0) {\n            console.log(\"Going to pop wallet now to pay gas...\")\n\n            var supply = parseInt(String(await connectedContract.totalSupply()));\n            console.log(supply);\n            var amount = 0.0;\n\n            if (parseInt(supply) + parseInt(numMfers) > 1000) {\n              console.log(\"supply\");\n              console.log(parseInt(supply));\n              amount = numMfers * 0.0269;\n            }\n\n            console.log(\"amount\");\n            console.log(amount);\n\n            var options = {\n              value: ethers.utils.parseEther(String(amount)),\n            };\n\n            var methodGasEstimate = await connectedContract.estimateGas.mint(numMfers, options);\n            // await nftTxn.wait();\n            methodGasEstimate = parseInt(methodGasEstimate);\n            console.log(`contract method gas estimate ${methodGasEstimate}`);\n            console.log(`amount ${amount}`);\n\n            options = {\n              value: ethers.utils.parseEther(String(amount)),\n              gasLimit: parseInt(methodGasEstimate * 1.2),\n            }\n\n            let nftTxn = await connectedContract.mint(numMfers, options);\n            console.log(\"Mining mint... please wait.\")\n            await nftTxn.wait();\n            console.log(`Mined, see transaction: https://etherscan.io/tx/${nftTxn.hash}`);\n          }\n        } catch (error) {\n          // alert(`couldn't mint ${numMfers} tokens `);\n          var errorMessage = error.message.substring(\n            error.message.lastIndexOf(\"message\") + 1, \n            error.message.lastIndexOf(\"method\")\n          );\n          if (errorMessage !== \"\") {\n            alert(errorMessage);\n            console.log(error.message);\n          }\n        }\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu />\n        {/* <a href=\"https://discord.gg/CTJXEXNuZN\"></a> */}\n          {/* <img src={discordLogo} alt=\"discordLogo\" className=\"social-icon-discord\"/> */}\n        {/* <p className=\"supply\"><a href=\"https://etherscan.io/address/0x68CCdcf9d5CB0e61d72c0b31b654d6408A93C65a\">CONTRACT</a></p> */}\n      <div id=\"mint\" className=\"container\">\n        <iframe id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"100%\"\n            src=\"https://www.youtube.com/embed/KVIfhg5aUw4?autoplay=0&mute=0\"\n            frameborder=\"0\"></iframe>\n        <div className=\"header-container\">\n            <img src={ddLogo} alt=\"sampleDadMfer\" className=\"sample-img\"/>\n          <div className=\"content-container\">\n            <p className=\"header gradient-text title\">DINOS DELUXE</p>\n            <img className=\"dinotopia\" src={dinotopiaIsReal} />  \n            <p className=\"sub-text\">\n              5000 dinos moments vibing before the meteorite\n            </p>\n            <br />\n            {currentAccount === \"\" ? (\n              <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n                CONNECT\n              </button>\n            ) : [\n              (!isMintActive ? (\n                <div className=\"button-container\">\n                  <button className=\"cta-button connect-wallet-button\">\n                    OPEN SOON\n                  </button>\n                </div>\n                  ) : null\n              ),\n              (isMintActive ? (\n                  <div className=\"mint-options\">\n                    <br />\n                    <div className=\"mint-specific\">\n                      <button onClick={mint} className=\"cta-button connect-wallet-button\">\n                        MINT DINOS\n                      </button>\n                      <div className=\"mint-quantity\">\n                        <p className=\"mint-text\">mint amount (max 20)</p>\n                        <textarea \n                          name = \"numDadMfers\"\n                          type=\"text\"\n                          id=\"numMfers\"\n                          className=\"textarea-entry\"\n                          placeholder=\"quantity\"\n                          onChange={e => setNumMfers(e.target.value)}\n                        >\n                        </textarea>\n                        </div>\n                    </div>\n                  </div>\n                  ) : null\n              ),\n            ]}\n            <br />\n            <p className=\"smol-text\">\n              <b>FIRST 1000 FREE</b>\n            </p>\n            <p className=\"smol-text\">\n              <b>THEN 0.05 ETH</b>\n            </p>\n            <div className=\"minting-container\">\n              <div className=\"minting-image\">\n              </div>\n              <div className=\"minting-amount\">\n                <p className=\"supply\">Dinos Deluxe</p>\n                <p className=\"supply\">{totalSupply} / 3000</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"footer-container\">\n        </div>\n      </div>\n      <div id=\"art\" className=\"container art-container\">\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"gradient-text art-title\">\n          Art\n        </div>\n      </div>\n      <div id=\"utility\" className=\"container roadmap-container\">\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"gradient-text roadmap-title\">\n          Utility\n        </div>\n        <br />\n        <div className=\"dino-container\">\n          <p className=\"sub-text\">All holders of Dinos Deluxe will get access to <b>Dinotopia</b></p>\n          <img className=\"dinotopia\" src={dinotopiaIsReal} />  \n          <p className=\"sub-text\">Dinotopia is a unique gaming experience reliving the great extinction, who will be the last dinosaur on earth?</p>\n        </div>\n      </div>\n      {/* Footer */}\n      <div className=\"footer\">\n        <div className=\"footer-container-bottom\">\n          <a href=\"#mint\">\n            <img className=\"logo-footer-button\" src={OpenseaLogo} />  \n          </a>\n          <a className=\"vertical-line\"></a>\n          <a href=\"https://twitter.com/The_HopeDAO\">\n            <img className=\"twitter-button\" src={TwitterLogo} />  \n          </a>\n          <a href=\"https://discord.gg/KJaJ9g9x\">\n            <img className=\"discord-button\" src={DiscordLogo} />  \n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;  "]},"metadata":{},"sourceType":"module"}